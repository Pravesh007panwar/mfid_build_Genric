<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4"
 xmlns="http://java.sun.com/xml/ns/j2ee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
 <display-name>Struts</display-name>
  <security-constraint>
    <web-resource-collection>
        <web-resource-name>restricted methods</web-resource-name>
        <url-pattern>/*</url-pattern>
        <http-method-omission>GET</http-method-omission>
        <http-method-omission>POST</http-method-omission>
      <!--   <http-method-omission>HEAD</http-method-omission>
        <http-method-omission>OPTIONS</http-method-omission> -->
    </web-resource-collection>
    <auth-constraint />
</security-constraint>
 <!--  for spring -->
 <context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>/WEB-INF/applicationContext-*.xml</param-value>
 </context-param>
 <!-- ends here -->
  <filter>
      <filter-name>Allowed-Ip-Address</filter-name>
      <filter-class> com.mfid.common.util.CheckIpAddress</filter-class>
    </filter>
  <filter-mapping>
      <filter-name>Allowed-Ip-Address</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>
 <filter>
  <filter-name>struts2</filter-name>
  <!-- <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class> by puneet vats for struts upgrade-->
  <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>

 </filter>
 <filter-mapping>
  <filter-name>struts2</filter-name>
  <url-pattern>/*</url-pattern>
 </filter-mapping>
 <listener>
  <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
 </listener>
 <listener>
  <listener-class>com.mfid.startup.StartupListener</listener-class>
 </listener>
 <!--  <listener>
   <listener-class>com.innefu.mfid.common.util.StartRadiusTest</listener-class>
</listener>
 
listener>
<listener-class>org.springframework.web.context.ContextLoaderListener
</listener-class>
</listener-->
 <listener>
  <listener-class>example.SchedulerServletContextListener</listener-class>
 </listener>
<!--  <listener>
  <listener-class>com.mfid.common.util.StartRadiusTest</listener-class>
 </listener> -->
 <listener>
  <listener-class>com.mfid.common.util.StartRedisServer</listener-class>
 </listener>
 <listener>
  <listener-class>com.mfid.common.util.XMPPListener</listener-class>
 </listener>
  <listener>
  <listener-class>com.mfid.common.util.StartRadiusTest</listener-class>
 </listener>
 <!--<listener>
   <listener-class>com.mfid.common.util.XMPPListener</listener-class>
 </listener> -->
 <servlet>
  <servlet-name>springcontext</servlet-name>
  <servlet-class>com.mfid.startup.InitServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
 </servlet>
 <session-config>
  <session-timeout>30</session-timeout>
 </session-config>
 <!--
  This servlet offers a sample task execution management interface.
  Connection to the servlet the user can retrieve and control the list
  of any ongoing task execution.
 -->
 <welcome-file-list>
  <welcome-file>/common/index.jsp</welcome-file>
 </welcome-file-list>
 <error-page>
  <exception-type>java.lang.NullPointerException</exception-type>
  <location>/common/index.jsp</location>
 </error-page>
 <error-page>
  <error-code>404</error-code>
  <location>/common/index.jsp</location>
 </error-page>
 <error-page>
  <error-code>500</error-code>
  <location>/common/index.jsp</location>
 </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/common/index.jsp</location>
  </error-page>
</web-app>
